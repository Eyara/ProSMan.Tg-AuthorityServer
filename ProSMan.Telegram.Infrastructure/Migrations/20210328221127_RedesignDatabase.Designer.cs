// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProSMan.Telegram.Infrastructure;

namespace ProSMan.Telegram.Infrastructure.Migrations
{
    [DbContext(typeof(TelegramContext))]
    [Migration("20210328221127_RedesignDatabase")]
    partial class RedesignDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProSMan.Telegram.Model.ApplicationClient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationClients");
                });

            modelBuilder.Entity("ProSMan.Telegram.Model.ApplicationClientCode", b =>
                {
                    b.Property<Guid>("ApplicationClientId")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(20);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("ApplicationClientId", "UserName");

                    b.ToTable("ApplicationClientCodes");
                });

            modelBuilder.Entity("ProSMan.Telegram.Model.Client", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<Guid>("Secret")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ProSMan.Telegram.Model.ClientPermission", b =>
                {
                    b.Property<Guid>("ApplicationClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Permission")
                        .HasColumnType("int");

                    b.HasKey("ApplicationClientId", "ClientId");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientPermissions");
                });

            modelBuilder.Entity("ProSMan.Telegram.Model.ApplicationClientCode", b =>
                {
                    b.HasOne("ProSMan.Telegram.Model.ApplicationClient", "ApplicationClient")
                        .WithMany("ApplicationClientCodes")
                        .HasForeignKey("ApplicationClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProSMan.Telegram.Model.ClientPermission", b =>
                {
                    b.HasOne("ProSMan.Telegram.Model.ApplicationClient", "ApplicationClient")
                        .WithMany("ClientPermissions")
                        .HasForeignKey("ApplicationClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProSMan.Telegram.Model.Client", "Client")
                        .WithMany("ClientPermissions")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
